##########스캐너대신 버퍼드리더##############
BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
StringTokenizer st = new StringTokenizer(br.readLine()); //입력받고
while(st.hasMoreTokens()){//이렇게 사용
  System.out.print(st.nextToken());  
}

BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
bw.write("출력할내용");
bw.flush(); //종료

###########우선순위큐###########
PriorityQueue<Integer> pq = new PriorityQueue<>();
//데이터 넣기
pq.offer(1);
//우선순위큐 iterator사용
Iterator<Integer> it = pq.iterator();
while(it.hasNext()){
  System.out.print(it.next().toString()+" ");
}
//데이터빼기
pq.poll()
//가장상위데이터보기
pq.peek()

#########ArrayList###########
String[] skill_trees를 아래와 같이 ArrayList로 만들어줄수 있음
ArrayList<String> skillTrees = new ArrayList<String>(Arrays.asList(skill_trees));


###########정규식 사용#############
System.out.println("BACDE".replaceAll("[^CBD]", ""));
->'BCD' //CBD를 다찾되 BACDE의 순서기준으로 반환
System.out.println("CBADF".replaceAll("[^CBD]", ""));
->'CBD' //CBD를 찾으며 순서에 맞게 반환
System.out.println("AECB".replaceAll("[^CBD]", ""));
->'CB'
System.out.println("BDA".replaceAll("[^CBD]", ""));
->'BD' //CBD중 C가 없고, 나머지는 위와같이 반환
